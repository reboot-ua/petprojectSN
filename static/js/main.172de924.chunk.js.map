{"version":3,"sources":["api/api.js","components/Users/users.module.css","assets/images/user.png","assets/images/preloader.svg","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","serviceWorker.js","redux/sidebar-reducer.js","utils/validators/objectHelper.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.module.css","components/common/Preloader/Preloader.js","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js"],"names":["__webpack_require__","d","__webpack_exports__","usersAPI","profileAPI","authAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","getStatus","updateStatus","status","put","me","login","email","password","rememberMe","logout","module","exports","userPhoto","selectedPage","p","nav","item","activeLink","FormControl","_ref","input","_ref$meta","meta","touched","error","children","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","formControl","Textarea","props","restProps","child","Object","C_Users_reboo_IdeaProjects_petprojectSN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","Input","createField","placeholder","name","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","Boolean","window","location","hostname","match","initialState","sidebarReducer","state","updateObjectInArr","items","itemId","objPropName","newObjProps","map","u","objectSpread","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","apiMethod","actionCreator","wrap","_context2","prev","next","sent","resultCode","stop","_x2","_x3","_x4","_x5","apply","this","usersReducer","action","followed","count","toConsumableArray","filter","id","isAuth","setAuthUserData","payload","getAuthUserData","_callee","_response$data$data","_login","_context","_x","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","react_default","s","NavLink","to","activeClassName","active","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","cn","defineProperty","pageNumber","key","e","User","user","src","photos","small","disabled","some","Users","objectWithoutProperties","common_Paginator_Paginator","Users_User","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","_this$props","Fragment","Preloader","components_Users_Users","React","Component","connect","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","page","totalCount","Header","header","loginBlock","HeaderContainer","components_Header_Header","LoginReduxForm","reduxForm","handleSubmit","onSubmit","required","style","formSummaryError","message","messages","stopSubmit","_error","Redirect","formData","withSuspense","react","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","Route","path","render","Users_UsersContainer","components_Login_Login","AppContainer","withRouter","promise","Promise","all","MainApp","BrowserRouter","react_redux_es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1__","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1___default","backgroundColor","preloader","maxLengthCreator","value","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","C_Users_reboo_IdeaProjects_petprojectSN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_reboo_IdeaProjects_petprojectSN_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","newPost","C_Users_reboo_IdeaProjects_petprojectSN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","C_Users_reboo_IdeaProjects_petprojectSN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","postId","dialogs","sendMessageCreator","newMessageBody","body","C_Users_reboo_IdeaProjects_petprojectSN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_Users_reboo_IdeaProjects_petprojectSN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.172de924.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"4957933a-8a61-407d-a87e-72b4e872954b\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__7OBm_\",\"selectedPage\":\"users_selectedPage__7HLt1\"};","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.6e7c9db7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3X9T3\",\"item\":\"Navbar_item__3aOF1\",\"activeLink\":\"Navbar_activeLink__YGNER\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n   <div>\r\n       <Field placeholder={placeholder}\r\n              name={name}\r\n              validate={validators}\r\n              component={component}\r\n              {...props}\r\n       /> {text}\r\n   </div>\r\n);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArr = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArr} from \"../utils/validators/objectHelper\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArr(state.users, action.userId, \"id\", {followed: true} )\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArr(state.users, action.userId, \"id\", {followed: false})\r\n\r\n    };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n         followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(userId), followSuccess)\r\n    }\r\n};\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(userId), unfollowSuccess)\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n};\r\n\r\nexport default authReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n};\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}> PREV </button> }\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map ((p) => {\r\n            return <span className={cn({\r\n            [styles.selectedPage]: currentPage === p\r\n        }, styles.pageNumber)} key={p} onClick={(e) => {\r\n            onPageChanged(p);\r\n        }}>{p} </span>\r\n        })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() =>{ setPortionNumber(portionNumber +1 )}}> NEXT </button>}\r\n\r\n    </div>\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          unfollow(user.id)\r\n                                      }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          follow(user.id)\r\n                                      }}>\r\n                                Follow</button>}\r\n\r\n                    </div>\r\n            </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n            </span>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                props.users.map(u => <User key={u.id}\r\n                                           user={u}\r\n                                           followingInProgress={props.followingInProgress}\r\n                                           unfollow={props.unfollow}\r\n                                           follow={props.follow}\r\n                />)\r\n            }\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let {pageSize} = this.props\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"Remember ME\")}\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React, {Suspense} from \"react\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n\r\n}","import React, {Component, Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"))\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspense(DialogsContainer)}\r\n                    />\r\n\r\n                    <Route path='/profile/:userId?'\r\n                           render={withSuspense(ProfileContainer)\r\n                           }/>\r\n\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n\r\n                    <Route path='/login'\r\n                           render={() => <LoginPage/>}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst MainApp = (props) => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n};\r\n\r\nexport default MainApp","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(<MainApp/>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2zCcZ\",\"error\":\"FormsControls_error__1lX0q\",\"formSummaryError\":\"FormsControls_formSummaryError__1maB8\"};","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2rHdg\",\"pageNumber\":\"Paginator_pageNumber__ugO6A\",\"selectedPage\":\"Paginator_selectedPage__n1Lj9\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1zkYr\",\"loginBlock\":\"Header_loginBlock__1U4c6\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}